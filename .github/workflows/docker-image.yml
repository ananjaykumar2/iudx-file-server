# This GitHub workflow will automatically update docker image tags of fs-depl in the datakaveri/iudx-deployment repository files
# for the master/main branch when a docker image with tag 5.6.0-alpha is pushed.

name: Update FS docker image tags for master branch

# Trigger the workflow when a new package is published to the registry
on:
  registry_package:
    types: [published]

permissions:
  packages: read

jobs:

  update-master:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3
      with:
        repository: datakaveri/iudx-deployment
        token: "${{ secrets.JENKINS_UPDATE }}"
        fetch-depth: 0

    - name: Update FS docker image tags for master/main branch
      env:
        GH_TOKEN: ${{ secrets.JENKINS_UPDATE}}
      run: |
        # Get the latest version of 5.6.0-alpha tags from the container registry using GitHub API
        export newtag5_6_0_alpha=$(head -n1 <(curl -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/orgs/datakaveri/packages/container/fs-depl/versions | jq ' .[].metadata.container.tags[0]'  | grep 5.6.0-alpha | sed -e 's/^"//' -e 's/"$//'))
        
        # Get the old tag from the YAML file
        export oldtag5_6_0_alpha=$(yq -r .services.file-server.image Docker-Swarm-deployment/single-node/file-server/file-server-stack.yaml | cut -d : -f 2)

        # Set Git user
        git config --global user.name 'jenkins-datakaveri'
        git config --global user.email "96175780+jenkins-datakaveri@users.noreply.github.com"

        if [ "$newtag5_6_0_alpha" != "$oldtag5_6_0_alpha" ]; then
          git checkout master
          git checkout -b fs-automatic-updates/$newtag5_6_0_alpha

          # Update the YAML file with the new tag
          sed -i s/$oldtag5_6_0_alpha/$newtag5_6_0_alpha/g Docker-Swarm-deployment/single-node/file-server/file-server-stack.yaml

          # Update application version in the Helm chart files
          export oldappversion=$(yq -r .version K8s-deployment/Charts/file-server/Chart.yaml)
          export newappversion=$(yq -r .version K8s-deployment/Charts/file-server/Chart.yaml | awk -F. -v OFS=. 'NF==1{print ++$NF}; NF>1{if(length($NF+1)>length($NF))$(NF-1)++; $NF=sprintf("%0*d", length($NF), ($NF+1)%(10^length($NF))); print}')

          sed -i s/$oldappversion/$newappversion/g K8s-deployment/Charts/file-server/Chart.yaml
          sed -i s/$oldtag5_6_0_alpha/$newtag5_6_0_alpha/g K8s-deployment/Charts/file-server/values.yaml

          git add Docker-Swarm-deployment/single-node/file-server/file-server-stack.yaml K8s-deployment/Charts/file-server/values.yaml K8s-deployment/Charts/file-server/Chart.yaml
          git commit --allow-empty -m "updated FS docker image tag to $newtag5_6_0_alpha"
          git push --set-upstream origin fs-automatic-updates/$newtag5_6_0_alpha

          # Create a new pull request on the datakaveri/iudx-deployment repository with the base branch master
          gh pr create -R datakaveri/iudx-deployment --base master --fill
        fi
